syntax = "proto3";

import "google/protobuf/empty.proto";

package blockchain;

service BlockchainService {
    // currently creating account on server, this is a security concern for that one request
    // it does however save me lots of headaches on the front end.
    rpc CreateEthereumAccount (google.protobuf.Empty) returns (WalletKeys);
    rpc UploadFile (UploadImageRequest) returns (UploadImageResponse);
    rpc DeleteFile (DeleteImageRequest) returns (google.protobuf.Empty);
    rpc GetAllDeployedEvents (google.protobuf.Empty) returns (AllDeployedEvents);
    rpc DeployEventParameters (DeployEventRequest) returns (DeployEventResponse);
    rpc TransactionStatus (TransactionStatusRequest) returns (google.protobuf.Empty);
    rpc EventDisplayDetails (EventDisplayRequest) returns (EventDisplayResponse);
    rpc EthPrice (google.protobuf.Empty) returns (EthPriceResponse);
    rpc BuyTicketParams (BuyTicketsParamsRequest) returns (BuyTicketsParamsResponse);
    rpc TicketPriceWei (TicketPriceWeiRequest) returns (TicketPriceWeiResponse);
    rpc AllMyEvents (AllMyEventsRequest) returns (AllMyEventsResponse);
    rpc DoesAddressOwnTicket (DoesAddressOwnTicketRequest) returns (DoesAddressOwnTicketResponse);
}

message WalletKeys {
    string address = 1;
    string privateKey = 2;
}

message UploadImageRequest {
    bytes binary = 1;
    string mime = 2;
}

message UploadImageResponse {
    string imageUrl = 2;
}

message DeleteImageRequest {
    string id = 1;
}

message AllDeployedEvents {
    repeated string addresses = 1;
}

message DeployEventRequest {
    string name = 1;
    string symbol = 2;
    string ticketAmount = 3;
    string ticketPrice = 4;
    string resaleCost = 5;
}

message DeployEventResponse {
    string to = 1;
    string data = 2;
}

message TransactionStatusRequest {
    string txHash = 1;
}

message EventDisplayRequest {
    string contractAddress = 1;
}

message EventDisplayResponse {
    float ticketPrice = 1;
    int32 ticketIdCounter = 2;
    int32 ticketAmount = 3;
}

message EthPriceResponse {
    uint32 ethPriceUSD = 1;
    int32 lastTime = 2;
}

message BuyTicketsParamsRequest {
    string contractAddress = 1;
    string walletAddress = 2;
    uint32 purchaseAmount = 3;
}

message BuyTicketsParamsResponse {
    string to = 1;
    string data = 2;
    string value = 3;
}

message TicketPriceWeiRequest {
    string contractAddress = 1;
}

message TicketPriceWeiResponse {
    string ticketPriceWei = 1;
}

message MyEvent {
    string media = 1;
    string contractAddress = 2;
    string ticketNumber = 3;
    string eventName = 4;
    string symbol = 5;
    string eventDate = 6;
    string ticketAmount = 7;
    string title = 8;
    string description = 9;
}

message AllMyEventsRequest {
    string walletAddress = 1;
}

message AllMyEventsResponse {
    repeated MyEvent events = 1;
}

message DoesAddressOwnTicketRequest {
    string contractAddress = 1;
    string address = 2;
}

message DoesAddressOwnTicketResponse {
    bool result = 1;
}